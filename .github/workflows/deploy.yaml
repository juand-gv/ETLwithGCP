name: Deploy project

on:
  push:
    branches:
      - master

jobs:
  deploy-csv-to-bigquery:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy CSV to BigQuery Cloud Function
        run: |
          gcloud functions deploy gc_csv_2_bq \
            --entry-point csv_to_bigquery \
            --runtime python39 \
            --trigger-http \
            --allow-unauthenticated \
            --region us-central1 \
            --source ./load_data \
            --set-env-vars GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}

  deploy-append-data:
    needs: deploy-csv-to-bigquery
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy Append Data Cloud Function
        run: |
          gcloud functions deploy append_data \
            --entry-point insert_data \
            --runtime python39 \
            --trigger-http \
            --allow-unauthenticated \
            --region us-central1 \
            --source ./api \
            --set-env-vars GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
  
  deploy-api-gateway:
    needs: deploy-append-data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Prepare OpenAPI configuration file
        run: |
          sed "s/{{ PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}/g" openapi2-functions_template.yaml > openapi2-functions.yaml

      - name: Check if API exists
        id: check_api
        run: |
          if gcloud api-gateway apis describe data-migration-api --project=${{ secrets.GCP_PROJECT_ID }}; then
            echo "API already exists."
            echo "::set-output name=exists::true"
          else
            echo "API does not exist."
            echo "::set-output name=exists::false"
          fi

      - name: Create API if not exists
        if: steps.check_api.outputs.exists == 'false'
        run: |
          gcloud api-gateway apis create data-migration-api --project=${{ secrets.GCP_PROJECT_ID }}

      - name: Create API Config
        run: |
          gcloud api-gateway api-configs create data-migration-config \
            --api=data-migration-api \
            --openapi-spec=openapi2-functions.yaml \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --backend-auth-service-account=${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Check if Gateway exists
        id: check_gateway
        run: |
          if gcloud api-gateway gateways describe data-migration-gateway --location=us-central1 --project=${{ secrets.GCP_PROJECT_ID }}; then
            echo "Gateway already exists."
            echo "::set-output name=exists::true"
          else
            echo "Gateway does not exist."
            echo "::set-output name=exists::false"
          fi

      - name: Create Gateway if not exists
        if: steps.check_gateway.outputs.exists == 'false'
        run: |
          gcloud api-gateway gateways create data-migration-gateway \
            --api=data-migration-api \
            --api-config=data-migration-config \
            --location=us-central1 \
            --project=${{ secrets.GCP_PROJECT_ID }}